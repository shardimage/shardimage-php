<?php

/**
 * @link https://www.shardimage.com/
 *
 * @copyright Copyright (c) 2018 Shardimage
 * @license https://github.com/shardimage/shardimage-php/blob/master/LICENCE.md
 */

namespace shardimage\shardimagephp\helpers;

class SecurityHelper
{

    private static $signatureMagics = [
        "\xf3\x81\xaa\x97\x63\x81\x9d\xdb\xc8\xc1\x7f\x1e\x4f\x9e\x81\x7f\xf4\xe4",
        "\x29\x5d\x18\x1c\x82\x43\x19\xd7\x16\xae\xce\xae\x95\xaa\xff\x0c",
        "\x8c\xaa\x13\xc1\x0d\xb6\x7c\x59\x65\xea\xb3\x8e\x08\x1b",
        "\x9f\x66\xe2\x3d\x62\xc5\x75\x69\x24\x80\xbd",
        "\x24\x86\x11\x4f\x8e\x1a\xe8\x31\xc9",
        "\x75\x20\xc9\x1b\x57\x6a\xc1",
        "\x25\xb0\x12\xf7\x1d",
        "\xe9\xba\x5a",
        "\xbc",
    ];
    private static $basicHashMagics = [
        "\x05\xab\xae\xbc\x65\xe2\xea\xb5\x94\xe0\x28",
        "\x5e\xde\x1d\xa3\xb3\x82\xa4\x97\x79\xaa",
        "\xe3\xf1\x9b\xf1\x21\x06\xe8\xc0\x23",
        "\x52\x29\x88\x26\x28\xab\x17\x35",
    ];
    private static $tokenHashMagics = [
        "\x9b\x48\x93\x8d\x9c\x2a\x9a\xd7\x73\xd6\xe7\x94\x4c\x27\x91\x39\x0d\x96\xa8\xa8\x6a",
        "\xaa\x89\x75\xb8\xd8\xbb\xa9\x59\xee\x07\xa6\x7c\x37\xa1\xbe\x3a\x70\x0a\xf0",
        "\xd8\x28\x5a\xcb\xd4\x45\x82\x23\x06\x32\xa9\xad\x5b\x36\xa2\x3a\x20",
        "\xde\xe1\xf4\xe0\xe7\xda\x30\x53\x0d\x77\x3b\xf3\x50",
    ];
    private static $imageUrlTokenMagics = [
        "\xc5\x79\x07\x6e\x10\x39\xeb\xe3\xd1\x3c\x6c\x2b\x3f\xac\x90\x4b\xe6\x1d\x70\x96\x50\x46\x76\x43\x75\x9c\xa8\x58\xf9\x06\x93\x77\x6d\x50\x72\x8d\x7d\xb8\x82\x69\x6b\x5d\x1a\xef\x37\x87\x61\xc1\x71\x65\x77\x5e\x15\x08\xf3\xe4\xc2\x12\xcb\x34\x81\x31\xb9\x8c\x35\xe7\x22\x8f\x6c\x6c\xc6\xf1\x9b\x36\xd7\xed\xe8\xd9\x15\x34\x06\xd3\x58\x55\xd1\xe4\x80\x27\x7c\x89\x7a\xaf\x9a\xa8\x58\x73\xc5",
        "\x33\xfd\x01\x41\x75\xbb\xe6\xc0\x44\xc0\x21\x8d\x2b\x04\x29\x79\x22\x75\xb9\x3a\xf0\x6c\xdb\x3c\x63\x47\xf9\xa1\x1f\xbb\x81\xea\xc8\xca\x83\x3a\x05\x50\xdb\x00\x0b\x2c\x72\x2e\x73\x1a\xf1\xd6\x18\x38\x5b\x86\x34\xf7\x92\xc1\xa9\x2a\xa9\xa6\x9a\xe1\x09\xfc\x52\xda\xa4\x5f\xf8\x06\x4c\xca\x94\x97\x4e\x87\xce\xba\xa0\x4f\xf6\xd4\xeb\x6b\x95\x08\x87\xd0\x6a\x06\xb8\x1a\x4c\x46\x2a\xf2\xc6\x0f\x00\xd1\x8e\x7a\xb8\x8b\x5e\xd0\x26\x4b\x73\x55\xc8\x8c\x9f\x06\x51\x0d\xed\x6c\x14\xc3\x29\x3c\xbd\xf9\xb3\x9d\x24",
        "\xd4\x60\x7d\x2c\x02\x82\x47\xdf\x98\x4b\x73\x66\x16\xe8\x76\xc3\xc6\x92\xfd\x35\x96\xd0\x91\xd7\xec\xdf\xa7\xff\x48\xfe\xfd\xda\xe7\xac\x88\x39\x9b\x6a\xaa\x8f\x40\xe2\x13\x09\x78\xfa\x44\x4d\xf3\x42\x61\xdd\x92\x28\xea\x76\xa0\x6e\xf1\x6e\xeb\x52\x91\x42\x9d\x0d\xab\x37\x53\x17\xd3\xce\x33\x9e\x7f\x10\x9b\x16\x50\x7d\x46\x88\x66\x85\xc5\x36\xb7\x1b\x24\x0f\x5e\xf6\x9f\x48\x99\x5a\xc0",
        "\x09\xc8\x81\x08\x5f\x98\x5b\x8f\xd0\xea\xae\xdc\x19\x8c\x21\x79\xeb\xa5\x39\x57\xc2\x66\x75\xc1\x27\xf4\x07\x94\x25\xe5\x0d\x8a\x42\xb0\xaf\xc4\x42\x88\x2e\x7b\x47\x03\xd8\x7a\xc6\x6c\xce\xc8\x78\x0f\xf4\x5e\xca\x42\x70\x91\x1d\x55\xcd\x68\xbc\x83\x28\x8e\xc1\xf7\x3e\x85\x04\x44\xff\x95\xfd\xf1\xab\x3e\x87\xd2\x70\xa9\xe2\xb4\xa6\xb0\xf8\x82\x2d\xa0\x35\xf5\x56\xed\x0e\x3f\xfc\xce\x7a\xf6\x54\x21\xdd\xb1\x1b\x3a\x00\x36\xa6\xae\x9c\x40\xba\xf7\x73\xee\x46\xb3\x77\xb1\xdf\x30\x04\x3c\xd6\xaf\x6a\xf7\xc1\xb2\x71\xb0\x77\x9c\xb3\x98\xdb\x88\xcd\x6f\xb8\x92\x73\x4c\x30\xe7\x10\x78\x23\xaa\x12\x90\x7f\x3c\x32\x05\x78\x81\xac\x02\x0d\xf1\x6c\xb7\x67\xf7\x47\x38\x40\xbc\x6a\xa2\x3f\x12\xc4\x0a\x63\x31\x41\x4f\xdf\xe8\xc4\xbe\xa1\xe8\xb6\x3d\x6a\xe0\x23\xe1\x36\xd0\xb0",
        "\xbf\xec\x9a\x03\xcc\xeb\x4c\x24\x50\x86\xd4\x13\xce\x8d\xa3\xb1\x87\xa8\xe7\x95\x0d\x43\x59\x64\x7c\xf9\xaf\x24\xd9\x9b\xd7\x16\x13\x27\x1f\xeb\xf3\x97\x8c\xad\xf5\xba\x61\xd6\xad\x18\xbf\x8a\x82\xf0\xe4\xc5\xd8\xe5\xec\x66\xf8\xe1\x9e\x18\x03\xcf\x5b\x4b\xd1\x61\x57\x87\xba\x45\xc0\x07\xb1\x58\x34\x2a\xb6\x16\xb4\xe7\x29\x7d\x45\x5a\x8c\xf7\x6a\x19\xc9\x79\xbf\x58\x9b\xb9\xcb\x40\x70\x0c\xca\xb7\x89\x80\x43\x26\x02\x7f\x43\x9b\xa1\xdf\xea\x8c\x87\xa0\x14\xca\x5d\xbf\x96\x82\xcf\x24\xe4\x2f\x67\x57\x5e\x78\xe3\x86\x5e\x35\x6a\x27\x6c\xf1\x77\x1c\xc2\xfc\x9c\x02\xde\x7c\xa8\x88\x29\x59\x24\x13\x52\xbc\xe4\x5d\x22\x25\x3e\x3d\x2b\xb6\x78\x90\x83\xfe\xb0\x22\x12\x9a\x37\x3b\x3b\xa6\xc4",
        "\x3e\x85\x2f\x0d\x06\x58\x44\xed\x1a\xc9\x34\x08\x60\x8b\x0a\xbe\xf2\xe7\xe8\xa0\xf3\xce\xda\x12\xe2\xc7\x8a\x6c\x46\xc3\xc6\x4b\x7d\x97\xca\x70\xa8\x50\xd6\x3f\x37\xc6\xf9\x81\x1b\x69\x0b\x06\x53\x55\x57\xa7\xc5\xce\x78\xf7\x54\x77\x39\xf9\x1e\xe6\x7c\x70\xda\x9b\x3d\xc9\xe3\x75\x10\xdd\x95\x89\xbc\x5c\x0a\xe2\x96\xd6\xae\x0d\x2f\xb6\x50\x6e\xe3\x32\xd3\x07\xc7\x84\xeb\x0a\x21\xc9\xf5\x5a\x98\xcb\x6b\xde\x2a\xce\x7b\x69\x8a\xf2\x42\xde\x5d\x6f\xa9\xc9\x80\x31\x35",
        "\xfd\x85\x7e\x30\x86\xa1\x8f\x6d\xb6\x27\x11\x2b\x7b\x4e\x7b\xd7\x3d\x15\xa7\xdf\x8c\xc0\x27\x5f\x95\xa3\x51\xef\xc6\xfa\xa7\x4a\xd9\x28\x04\x96\x87\x9a\x8a\xed\x7e\x27\x33\x30\x16\x3f\xd2\x1a\x5f\x8a\xf4\x0c\xf1\xf7\xba\x82\xf6\xa8\xcf\xbe\xbb\x04\x7c\x78\x09\xe2\xae\xe7\x0a\x77\x49\xf2\xd3\x8f\x78\x60\x67\x60\x9c\xcf\xe4\x94\x62\xf8\x4a\x90\xc7\x8f\x78\x0f\x94\x4e\xab\x5d\xda\x6a\xa3\x8d\xe9\xac\x57\xa9\xdf\xb8\x95\xf0\xae\x1c\x88\xee\x6a\xae\x3c\x26\x26\x13\x68\x38\xf3\x25\x52\xd1\x98\xfc\x15\x3c\x51\x62\x19\xcd\xc2\xf5\x36\xa2\x8e\x21\x86\x54\xe3\x14\xd8\xbb\x40\x0e\x05\x36\xe3\x91\xfa\x48\x64\xa1\xa9\x6f\x97\x28\x06\x48\x71\xe7\x96\x36\x70\x9d\x8e\xe7\x77\xef\xdb\x7d\x24\xff\xa1\xf9\xd6\xe0\x15\x1d\x3e\x11\x8d\xfe\x5f\xd6\x9f\x0f\xa6\x0a\xef\x94\x53\x31\x68",
        "\x97\x45\x2c\x36\x7b\x61\xd5\x35\x90\x03\x34\xef\xbb\xba\xf0\xe5\x27\xa3\xd1\x13\xca\xab\x28\x06\x4b\xf0\x03\xd0\x88\xca\xa6\x92\x44\x9f\xaa\x92\x4a\xa2\xe7\xef\xe7\xd7\xc2\x40\x98\x25\xe8\xb6\xf9\x90\x8d\x16\x1c\xf5\xee\xca\xeb",
        "\xad\x09\x56\x63\x35\x58\x73\x84\x2d\x81\x74\xbf\xc6\x8e\x03\xcb\x26\x08\x5b\x54\xde\xc6\x19\x9e\xec\xbd\xca\xd2\xc9\x7a\xc2\x21\x6c\xcb\x23\xe1\x08\x13\x1b\xf0\x7a\x9a\x13\x10\xa9\x40\xa7\xf4\x3d\x29\x46\x33\x2f\xcd\x1b\xc6\xde\x05\x6c\x6f\xcf\x01\x82\xa8\x94\x41\x36\xa3\x26\x22\x5e\x47\x9b\xfe\x71\x2a\x59\xab\x97\xeb\x21\xf4\xe3\x8d\x9b\x2c\x8b\xcc\x96\xe6\x22\x98\x02\xed\x74\x71\x77\xda\x15\x19\x4e\xca\x12\x6f\x99\xa9\x99\x72\xd5\x69\x66\x22\xed\x72\x82\x76\xe2\xca\xb8\x03\x64\xc9\x42\xa7\xbc\xdf\x3f",
        "\xc3\xcb\xc7\x91\x80\x24\x09\x79\xc6\x9d\x35\x94\x68\x60\x67\x13\x8a\x86\x15\xdf\x81\xa5\x56\x01\x9f\x3f\x67\xc3\x27\x13\x53\xe5\x89\x33\x58\x4c\x49\xea\xd0\xdb\xfb\xe9\xc8\x91\x39\xca\x04\xab\x77\x1d\xba\x00\x46\x44\x16\x46\x8d",
        "\xe4\x97\x8a\xfb\xcf\x0f\xab\x76\x28\xcb\xdf\xdf\x42\xf0\xac\x7b\x06\x8f\x2d\x79\x80\xe0\xa9\xb7\x19\xfd\x07\xbd\x16\x35\x47\x35\x51\xeb\xbf\x87\xc9\xe1\xf9\x93\xbe\x3e\xbd\x00\x2b\x10\x50\x99\xe2\x9d\x6d\x6d\x83\xf9\x3a\x3c\xfd\x25\x2e\xf7\x78\x4a\x19\x12\xf8\xaa\xde\x57\x8f\x93\x90\xd2\xf3\xb0\x10\xa3\xbf\x2d\x82\xb7\x1d\xc0\x41\x64\x34\xe0\x06\xac\xff\x6d\x33\xc4\x4b\x93\x7f\x6f\xff\xb1\x52\xcb\xe2\xbc\x5b\x4c\x5c\x90\xa7\x85\xa0\x64\xb1\x03\xe2\x45\x9c\x1e\x17\xc6\xf6\x5a\xe4\x36\x8e\xc8\x46\x71\xca\xc3\xf4\x61\x59\x34\x16\x66\xd7\x03\x37\x10\xd5\xf3\x5c\x5b\x73\xa0\x6f\x33\x28\xe7\x41\xe4\x70\x5b\x32\xe8\xa0\x20\x60\x3c\x75\x16\x3a\x4a\xcf\xbb\x38\x98\x44\xc2\xf1\xe5\xa2\x62\x70\x56\x41\xe3\xe4\x53\x3e\x5c\x31\x34\x72\x2b\xa8\x62\xde\x5d\x2b\x50\x49\xf5\x29",
        "\x94\x98\x2b\xf0\x81\x89\x1b\xf4\x62\xe3\xf9\x8b\x14\xe0\x52\xc1\x39\xa4\x6c\xc5\x0c\xb7\x48\x56\x21\x76\x48\xc2\x0b\x49\x21\xc0\x8a\xf8\xe8\xe8\xef\xc0\x5e\x6a\x4b\x4d\x60\x53\x86\x0a\x17\x62\x81\xb1\x5f\x31\x03\x56\x49\x67\xa5\xb4\x98\xb9\x19\x22\x24\x2d\x16\x43\xc1\x7d\x9e\x00\x98\x82\x1e\xfb\x19\x89\x55\x7b\xe6\x71\x95\xcb\x3a\xd8\x2e\xf7\x63\xa8\x13\x93\xbc\x9d\x47\xf3\x5e\x39\x45\x30\x4d\x69\x23\xe4\x6f\xc6\x81\x35\xfa\x85\x91\x55\x5b\x89\x94\xf3\xeb\x03\xcf\x77\x04\xab\x5c\x6d\xbc\x7d\x12\x33\x05\x94\xfa\x88\xdc\xdf\xa4\x72\xe2\x81\x3f\x2b\x42\xbe\xa0\x9d\x9e\xa2\x22\x8c\xa9\xb5\x15\x43\x85\xd3\x81\x08\xdb\x8e\x0c\x6c\x79\x51\xcc\x45\xef\xa2\x5d\x46\x43\x90\x7e\x37\x0a\x92\xf8\x30\xc4\x4c\xee\xfa\xe5\x4f\xdb\xf4\xae\x4e\x65\x6b\x5c\x24\x86\x9c\x01\x4e\x69",
        "\x71\x98\x3d\x5f\xc0\x27\xba\xc0\x60\xb1\xfd\xb4\x90\xe4\x71\x1f\x19\x0b\x2a\xb7\x73\x04\x79\xc5\x2e\x55\x0a\xda\xc2\x7f\xf9\x08\x10\x69\xe0\xda\x3c\xba\x17\x26\x7b\x8e\x2c\xf3\x2a\xe3\x24\xb5\x50\x4d\x55\xfc\xba\x49\xcc\x49\x73\x6a\x1f\xb1\xd2\x28\xf3\x4c\x26\x7d\xc4\x79\x35\x77\x67\xe4\xdd\x4e\xa2\x08\xcd\xb1\x66\xd5\x4e\xaf\x40\x1e\x29\x86\x49\x4b\x06\x43\x41\x9c\x47\xc6\xf6\xa8\x59",
    ];
    private static $imageUrlSecretMagics = [
        "\x0a\xc3\x59\x27\xa7\x1e\x2b\x1b\x8b\xe2\x79\x86\xd1\xb1\x46\x9a\x1b\xa4\x88\x66\xf9\x6e\x39\x9f\x91\xf5\x6e\xbf\x1e\x09\x0d\x57\x7e\xb0\xb1\xc4\x49\x37\xa7\x4a\x6e\xde\x48\x56\x1e\x4d\x0c\x40\x69\xf9\x7c\xe3\x42\x67\x46\x5f\x23\x05\xc9\x8d\x5e\xfa\xfe\xb4\x82\xd2\x30\xe4\xb9\x38\xe8\xf8\xd2\x83\x75\xdd\xc9\x9f\xf0\x25\x6c\xdd\xa8\x94\x75\x2f\xdc\x07\xdd\x3d\xbe\xcf\x4c\xa0\x40\xa2\x93",
        "\xad\xc1\x7e\x91\x4f\xae\xd4\x24\xf8\x19\x8d\x1a\xd6\x57\x19\x92\xa6\x75\xcd\x2b\xd4\x14\x68\x79\x37\xad\x85\x4f\x7b\x2d\x12\xc6\x30\xc5\x8e\x05\x41\xe0\x4c\x32\xb1\xe1\x3b\x75\x56\x4a\x46\x31\x72\x3c\xb8\xe0\x1d\xb3\x6d\xd8\xdc\x21\xb5\x32\x08\x8d\x44\xf5\xa9\xec\x4a\xe1\xb9\x85\x61\xed\x5a\x29\x0d\xec\x30\xa2\x46\x2b\xd6\x34\x48\xaf\xba\x5d\x63\x18\xf9\x15\x9b\x0f\xe4\x80\x75\x1e\x2a\x7c\xb9\x2b\x84\x32\xdd\x15\x9b\xc4\xb1\xae\xed\x79\xef\x9f\x8c\xc5\xb3\x7a\xe5",
        "\x50\x48\x94\xf9\x78\x85\x0f\x7c\x75\x2c\xb5\x60\xd2\x16\x4c\x34\x7b\x6e\xd9\x96\xa5\xcd\x4d\xc0\x52\x89\xb0\xfc\xa0\x4b\x47\x6d\x76\xe0\x35\x70\x54\xbf\x0f\x3c\x06\xad\xbc\xb2\x79\x3e\x68\x5b\x0f\xe3\x2c\xa1\xdd\xf1\x19\xf9\x30\xfa\x5d\xae\xa8\xe0\xe9\xf0\x84\x15\x6f\xcc\xc0\xa6\x4e\x19\xb7\xc8\xbb\xea\xbd\x26\x84\xc6\x9f\x9d\xd5\x24\x4e\xea\x72\xea\xa7\x79\x77\x61\x2c\x22\xe7\xef\x37\x86\x1e\xa2\xd8\x89\x71\xeb\x0b\x3e\x4b\xf1\xb3\xf9\x46\x5a\x22\x9d\x11\x1a\x01\x43\x15\x66\xd7\x24\x04\x33\x89\xff\x31",
        "\x3c\x6c\x46\xec\xa8\xf1\x1b\x4c\x86\x60\x06\xc0\x47\x88\x6c\x65\x5e\xc1\x74\x5c\xce\x29\x9b\x9b\xfc\x6e\x05\xd0\xfc\x7e\xbc\x82\x4f\xeb\xc5\xc6\x95\x3b\x0b\x0e\xc6\x6c\x20\x63\x27\x08\x2d\x22\xb5\x51\xf5\x06\x81\xab\xf0\x81\x1a",
        "\xd4\xc4\x02\x09\x43\xb3\x4e\x41\xe9\x51\x71\xb1\x13\x45\x26\x88\xcf\x7b\xee\x4d\xc6\x96\x71\x94\xf8\xb3\xbf\x7f\xb4\x25\x2e\x94\x8b\xf3\xcd\xd8\xaf\x61\x0d\x52\x0d\x8b\xbe\xa4\x38\x94\xd2\x77\xf0\x06\xab\xd4\x3e\xa5\xc1\x6a\xe2\x7a\x79\x67\xc0\xca\xde\x8c\xd2\x73\xb7\xbe\xd1\xb8\x3b\xc1\xad\x6f\xa0\x4b\x11\x75\xa8\xbe\x06\x54\x78\x31\x86\x44\x58\xa2\x34\xdb\x40\x2a\x1e\x9d\x49\xa3\xc5\x4f\x40\x73\x49\xea\x60\x58\x87\x88\x29\x48\x64\x65\x9d\x03\x7f\x6f\xb3\x07\x1a\xb0\xc3\x11\x37\x3e\xa5\xf6\x82\x7f\x42",
        "\x0c\xe4\x47\xd7\xa3\x2f\x46\x38\xc3\xdc\xc0\x8a\x61\xc7\x40\x4a\x66\x98\x32\xd8\x33\x78\x9f\x58\xc6\x69\x47\x00\xdd\xb4\x1f\x5a\x4d\x45\xaf\x45\xb6\x4b\xdb\xc6\x85\x58\x55\x00\x90\xec\x83\x13\x1b\xe0\x00\xd0\xa7\x82\x95\xb4\xf8\x7b\xfb\x9f\x97\x5c\x43\x26\x36\x0a\xd3\xdb\x70\xe0\x16\xa3\xa4\x0f\xaa\xec\xc6\x32\x5b\xd8\x69\xf4\xcb\x01\x81\xcb\xe5\x3b\xf2\xcc\x0b\x4c\xa8\xd4\x55\xcb\xaf\x25\xbe\x8c\x57\xcc\x3b\x83\x90\x6a\x9f\x1e\x9a\xa8\x8e\x80\xc2\x5c\xa0\xca\x63\xc9\x7a\xf6\x48\xd5\xcc\x2f\x6e\x28\xc9",
        "\xd6\x80\x8c\xe8\xb0\xd7\x1a\x99\x94\xbd\x62\xa5\x1d\x42\x03\x9a\x71\x8d\x51\x8d\xf2\x0f\x19\x3e\x8a\x31\xb0\x3a\xe5\xda\xaa\x42\x91\xcd\x0c\x0b\xbe\xd6\x54\xcd\x31\xb0\xc8\x0b\x79\x8f\x03\xd6\xcd\xfc\x36\x90\x54\x48\x65\x6c\x41\x78\xe4\x4d\x54\x4c\x24\xc2\x9f\x63\x4b\x86\x0b\x4a\x4d\x15\xc1\x2a\x56\x46\x4f\xb5\x57\xff\x36\x35\x86\x95\xb5\x6e\xda\x7f\x23\x92\x05\x6b\xd4\x73\xfa\xb6\x7a",
        "\xce\xe2\xdc\x10\x40\x71\xe3\x04\x2f\xdf\x75\x7c\x87\x1f\x20\xa2\xf7\x8e\x56\xf2\xde\xe3\xd5\x84\x1a\xce\xcc\xea\x0d\x3b\xe2\xab\x00\xb8\xe7\x98\xdc\xed\x46\xea\xa4\x94\x14\xfc\x95\x3d\x02\x66\x88\x40\x4b\x2f\x89\x47\xf0\x1d\x80\xaa\xdf\x17\x02\xa6\x28\x47\x66\xd9\xc8\xef\xf6\x59\xe7\xf3\x6f\xa4\x47\x49\x27\x9a\x5b\x3e\xd1\x17\xd6\xcb\x65\x5a\x56\xc2\x4c\x6f\x7f\xf8\xfe\xf8\xe2\x99\x6e\xcf\x7f\x2f\x5f\x7d\x4d\x24\x28\xd6\x80\x50\xb1\x6c\x36\x55\xb9\x47\xc8\x15\x33",
        "\xde\x25\xa9\x00\x52\x38\x73\xa0\x3d\xfb\x4c\x0c\x5d\x73\x50\x83\xf3\xf0\x79\xed\x2d\xe1\x27\x63\x1d\xab\xa0\x85\xe4\xaa\xf4\xeb\x57\xe6\x37\x5b\xd9\xce\x51\x77\x98\x61\xa6\x89\x58\x60\x5b\xc0\x7c\x31\xc5\x9a\xc4\x48\x07\xe7\x51",
        "\x3e\x08\xe7\x7a\x4b\x72\x03\x42\x17\xb9\x55\x98\xd1\x58\x30\x7a\x91\x2c\x77\x0c\x15\x2e\xad\x4e\xfc\x72\x69\xfe\xdc\xa0\x4f\xbb\x0d\xe3\x1a\x85\xf7\xa2\x88\x1b\x2b\x91\x00\x5a\x7c\x95\x2a\xad\xe4\x15\x66\x22\x3a\xbd\x44\xf5\x11\xcc\xee\x44\x91\xa5\x5a\x4f\x14\x00\xe3\x23\xb9\xd2\xf3\xea\x3b\x5c\xa5\x57\x73\x46\xcf\x45\xdb\xcb\x3e\x39\xd3\xf0\xbc\xef\x92\x46\x7e\xea\x4f\x09\x52\x62\xc9\x1e\x8b\xa4\x67\x3d\xae\x71\xb0\x6d\x13\x96\x7f\x48\xc1\x78\x10\xa2\xb5\x2e\x0b",
        "\x97\xf0\xa2\xa5\xc7\x66\xfb\x1d\xb5\xfb\x0c\x6d\x50\x1d\xf3\x15\x9e\xf6\x63\x64\x4e\xf8\x5a\x7a\x77\x7c\x65\x69\x53\xf6\xe9\x3e\x01\x65\x2c\x45\x9d\x2b\x3c\xfe\x38\xd6\x66\xd4\x0e\x5c\x85\x71\x42\x57\x8f\xd3\x79\x55\x0e\x91\x50\xd9\x5b\xfd\x1f\x48\x94\x4e\x15\x3d\xbf\x00\x44\xc5\x81\x28\x2c\x98\xc7\x57\x9c\x8d\x1f\x3d\x4f\xee\x2c\xe5\xd4\x58\xc6\xfb\xc0\xcb\x49\x64\x4a\x01\x43\x9c\x4f\x05\x4d\xf9\xef\x93\xa7\x52\x6d\xb5\xb0\xa5\x00\x5f\x40\xb5\xd7\xe1\x12\xed\x36",
        "\x76\xaa\x48\xd6\x53\xd3\x95\xb4\x01\x9f\xf7\xb8\xdb\x7c\x07\x02\x05\x74\xb6\x25\x23\x56\x6c\x42\x37\x02\x12\x82\x14\xae\x52\x52\xee\x6e\xaa\x1a\x90\x71\xda\x21\xc0\xf8\x24\x23\xd8\xc2\xe2\x70\xf4\xa3\xf2\x6c\x14\x6d\x32\xa0\x8d\x5b\x87\x67\x70\xed\x92\x32\x81\x4c\x0e\x0d\x1b\x1d\x20\xe8\xdf\xc1\x37\x75\xde\xc9\xb1\x7b\xc4\x46\xc0\xd4\xae\x07\xbe\x5d\xa4\x02\xc4\x5d\xad\x6e\xf4\x3b\x28\x0f\xd6\x27\xc4\x64\xa9\xac\xb2\x73\xf3\x56\x3c\x7c\x41\x35\xea\x93\x1e\xa5\xcf\x8e\x10\x57\x33\x25\x8d\x71\x4a\x18\xa2\xd7\xd7\x82\x08\x5e\x4c\x3f\xf7\xe5\xf9\xb8\x9e\x93\x4f\x10\x48\xca\x86\xa8\xe1\xc8\x48\x53\xf9\xf3\x5e\xab\x03\x06\x42\xdc\xae\x2d\x29\x78\x7e\xac\xf0\x8e\x70\x4c\x4f\x4b\x3f\xe2\x3a\x3f\xef\x93\x15\xe5\xc7\xe6\xd6\xf0\xc2\x26\x8c\x57\x1a\x78\x13\x75\xe8\x76\xd1",
        "\xcd\x8d\xd4\xe2\x08\x58\x02\x3e\xe8\xf7\x26\xed\xad\x9c\xa4\x89\x61\x49\x14\x41\xb5\x28\xbe\xc9\xe8\xdc\xa0\xc4\x4b\x55\x6b\xa3\xb7\xc0\x17\xb9\x57\x55\x50\x47\xf9\x0b\x35\x43\x5b\x93\xb2\x0f\xc0\x6c\xd1\x2b\xac\xf9\xa4\x30\x77\x3f\x86\x1d\x67\xac\x89\x4a\x86\x2a\x0e\xb4\xfc\xdc\xdc\x1c\x89\x5b\xf0\x1e\x22\x6b\x24\x31\x7f\xd0\xca\xb0\xa3\xed\x78\xe6\xfd\xef\xd5\x9f\x97\x68\x8a\x87\x58",
    ];

    /**
     *
     * @param string $key    API key
     * @param string $uri    request URI
     * @param string $secret API secure
     *
     * @return string
     */
    public static function generateSignature($uri, $key, $secret)
    {
        $sizeofMagics = sizeof(self::$signatureMagics);

        $a = ord(substr($key, -1)) % $sizeofMagics;
        $b = ord(substr($key, -2, 1)) % $sizeofMagics;
        $c = ord(substr($key, -3, 1)) % $sizeofMagics;
        $d = ord(substr($key, -4, 1)) % $sizeofMagics;

        $hash = sha1(self::$signatureMagics[$a] . $key . self::$signatureMagics[$b] . $uri . self::$signatureMagics[$c] . $secret . self::$signatureMagics[$d]);

        return sprintf('s-%s', $hash);
    }

    /**
     *
     * @param string $host
     * @param string $uri
     * @param string $key
     * @param string $secret
     *
     * @return string
     */
    public static function generateBasicHash($host, $uri, $key, $secret)
    {
        $host = strtolower($host);
        $key = (string) $key;
        $bin1 = substr($key, -3, 1) % 4;
        $bin2 = substr($key, -4, 1) % 4;
        $bin3 = substr($key, -5, 1) % 4;
        $bin4 = substr($key, -6, 1) % 4;

        $sha1 = sha1(
                static::$basicHashMagics[$bin1]
                . $uri
                . static::$basicHashMagics[$bin2]
                . $secret
                . static::$basicHashMagics[$bin3]
                . substr($key, -4)
                . static::$basicHashMagics[$bin4]
                . $host
        );

        return substr($sha1, 2, 3)
                . substr($sha1, 13, 3)
                . substr($sha1, 27, 3)
                . substr($sha1, 35, 1)
                . substr($key, -2);
    }

    /**
     * @param string $host
     * @param string $uri
     * @param string $token
     * @param string $secret
     * 
     * @return string
     */
    public static function generateTokenHash($host, $uri, $token, $secret)
    {
        $m0 = static::$tokenHashMagics[ord(substr($secret, -1, 1)) % 4];
        $m1 = static::$tokenHashMagics[ord(substr($secret, -2, 1)) % 4];
        $m2 = static::$tokenHashMagics[ord(substr($secret, -3, 1)) % 4];
        $m3 = static::$tokenHashMagics[ord(substr($secret, -4, 1)) % 4];

        $sha1 = sha1(
                $m0
                . $host
                . $m1
                . $uri
                . $m2
                . $token
                . $m3
                . $secret
        );

        return substr($sha1, 3, 4)
                . substr($sha1, 33, 4)
                . substr($sha1, 17, 4)
                . substr($sha1, 25, 4);
    }

    /**
     * @param string $host
     * @param string $uri
     * @param string $key
     * @param string $secret
     * 
     * @return string
     */
    public static function generateImageSecretSignature($host, $uri, $key, $secret)
    {
        $host = strtolower($host);
        $key = (string) $key;

        $base = [];

        $magicsLength = sizeof(self::$imageUrlSecretMagics);
        $additional = [$host, $uri, $secret, $key];
        $offset = 0;
        foreach (str_split($key) as $number) {
            $offset += $number;
            $magic = self::$imageUrlSecretMagics[$offset % $magicsLength];
            $base[] = $magic;
            $base[] = array_pop($additional);
            $offset += ord($magic[0]);
            $base[] = sha1($offset, true);
            if (!$additional) {
                break;
            }
        }
        $base = join(chr($offset & 0xff), $base);
        $sha1 = str_split(sha1($base, true));
        $base = [];
        for ($i = 0; $i < 24; $i++) {
            $base[] = $sha1[($i + $offset)%sizeof($sha1)];
        }
        $base = join('', $base);
        
        return str_replace(['+', '/', '='], ['-', '_', ''], base64_encode($base))
                . substr($key, -2);
    }

    /**
     * @param string $host
     * @param string $uri
     * @param string $token
     * @param string $secret
     * 
     * @return string
     */
    public static function generateImageTokenSecretSignature($host, $uri, $token, $secret)
    {
        $host = strtolower($host);

        $base = [];

        $magicsLength = sizeof(self::$imageUrlTokenMagics);
        $additional = [$host, $uri, $secret, $token];
        $offset = 0;
        foreach (str_split($token) as $number) {
            $offset += ord($number);
            $magic = self::$imageUrlTokenMagics[$offset % $magicsLength];
            $base[] = $magic;
            $base[] = array_pop($additional);
            $offset += ord($magic[0]);
            $base[] = sha1($offset, true);
            if (!$additional) {
                break;
            }
        }
        $base = join(chr($offset & 0xff), $base);
        $sha1 = str_split(sha1($base, true));
        $base = [];
        for ($i = 0; $i < 24; $i++) {
            $base[] = $sha1[($i + $offset)%sizeof($sha1)];
        }
        $base = join('', $base);
        return str_replace(['+', '/', '='], ['-', '_', ''], base64_encode($base));
    }

}
